enum Nat {
  Suc(Nat),
  Zero,
}

is_even : Nat -> bool;
is_even n = {
  match n {
    ::Zero => true,
    Suc(::Zero) => false,
    Suc(Suc(n)) => is_even n,
  }
}

is_odd : Nat -> bool;
is_odd n = {
  match n {
    ::Zero => false,
    Suc(::Zero) => true,
    Suc(Suc(n)) => is_odd(n),
  }
}

to_nat : num -> Nat;
to_nat n = {
  if n > 0 then
    Suc (to_nat (n - 1))
  else
    Zero
}
